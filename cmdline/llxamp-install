#!/bin/bash

source /usr/lib/llxamp/environ

help_menu(){
    echo
    echo "Usage:"
    echo
    echo "$program [<file_pack>] [<target>]"
    echo "  defaults:"
    echo "    <file_pack>: $file_pack"
    echo "    <target>: $rptarget"
    echo
}

error_menu(){
    echo
    echo Error $1
    help_menu
    exit 1
}

execute(){
    $@
    if [ $? -ne 0 ]; then
        echo "Error executing '$@', aborting operation"
        exit 1
    fi
}

execute_silent(){
    $@ >/dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "Error executing '$@', aborting operation"
        exit 1
    fi
}

make_change_text(){
    echo Patching text files
    export LC_ALL=C
    components="httpd php mysql"
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    pushd $rptarget >/dev/null

    for component in $components; do
        found=$(execute egrep -Ilor "$TAG" $component)
        if [ $? -eq 0 -a -n "$found" ];then
            found=($(echo $found |xargs -n1 |sort|uniq))
            for file in ${found[@]}; do
                execute sed -r -i'.pre-change' "s|$TAG|$rptarget|g" "$file"
            done
        fi
    done
    find $rptarget -name '*.pre-change' -exec rm {} \;
    popd > /dev/null
}

make_change_bin(){
    echo Patching binary files
    export LC_ALL=C
    components="httpd php mysql"
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    pushd $rptarget >/dev/null
    declare -a found_bins_with_tag
    for component in $components; do
        found_bins=$(execute find $component -type f -exec grep . -IL "{}" \;)
        if [ $? -eq 0 -a -n "$found_bins" ];then
            found_bins=($(echo $found_bins |xargs -n1 |sort|uniq))
            for file in ${found_bins[@]}; do
                found_tag=$(grep -ol "$TAG" "$file" || true)
                found_bins_with_tag+=($found_tag)
                if [ -n "$found_tag" ];then
                    execute python3 $script_dir/patch.py $rptarget/$file $TAG $rptarget
                fi
            done
        fi
    done
 
    for file in ${found_bins_with_tag[@]}; do
        path=""
        path=$((chrpath -l "$file" 2>/dev/null || true)|grep "$TAG"|sed -nr "s|.*RUNPATH=$TAG(.*)|\1|p")
        if [ -n "$path" ]; then
            execute chrpath -r "$rptarget$path" $file >/dev/null
        fi
    done
    
    popd > /dev/null
}

write_httpd_conf(){
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    sed -r -e "s|@@LLXAMP_BASEPATH@@|$rptarget|g" -e "s|@@LLXAMP_PORT@@|$DEFAULT_PORT|g" -e "s|@@LLXAMP_USER@@|$(whoami)|g" -e "s|@@LLXAMP_SERVERNAME@@|$(hostname)|g" "$TEMPLATES_DIR"/httpd.conf > $rptarget/httpd/conf/httpd.conf
}

include_php_samples(){
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    echo Including PHP sample pages
    cp "$TEMPLATES_DIR"/db.php $rptarget/httpd/htdocs/
    cp "$TEMPLATES_DIR"/info.php $rptarget/httpd/htdocs/
}

configure_mysql(){
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    echo "Configuring MariaDB 5.5"
    mkdir -p $rptarget/mysql/conf
    mkdir -p $rptarget/mysql/temp
    mkdir -p $rptarget/mysql/var/mysql
    mkdir -p $rptarget/mysql/var/log
    sed -r "s|@@LLXAMP_BASEPATH@@|$rptarget/mysql|g" "$TEMPLATES_DIR"/my.cnf > $rptarget/mysql/conf/my.cnf
}

configure_mysql2(){
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    echo Installing initial database
    execute_silent $rptarget/mysql/scripts/mysql_install_db --basedir=$rptarget/mysql --datadir=$rptarget/mysql/data --no-defaults --user=$(whoami)
    echo Starting database
    execute_silent bash $rptarget/llxamp-start-mysql
    sleep 5
    echo Creating test table
    execute_silent $rptarget/mysql/bin/mysql --defaults-file=$rptarget/mysql/conf/my.cnf --user=root < "$TEMPLATES_DIR"/create_table.sql
    echo Securing Mysql installation
    execute_silent $rptarget/mysql/bin/mysql --defaults-file=$rptarget/mysql/conf/my.cnf --user=root < "$TEMPLATES_DIR"/secure_installation.sql
    echo Stopping database
    execute bash $rptarget/llxamp-stop-mysql
}

write_start_scripts(){
    [ ! -e "$rptarget" ] && error_menu "invalid target"

    echo Writting start/stop scripts into "$rptarget"
    
    for script in "$TEMPLATES_DIR"/llxamp-{start,stop,reset,status}-*; do
        sed -r -e "s|@@LLXAMP_BASEPATH@@|$rptarget|g" > "$rptarget/$(basename $script)"
        chmod +x "$rptarget/$(basename $script)"
    done
}

create_target_dir(){
    if [ ! -e "$rptarget" ]; then
        mkdir -p "$rptarget" ||  error_menu "Invalid parameter '$target'"
    fi
}

test_install_pack(){
    [ ! -e "$rpfile_pack" ] && error_menu "invalid install-pack"
    echo Testing archive "$rpfile_pack"
    contents=$(execute tar -ztf "$rpfile_pack")
    contents=($(echo $contents|xargs -n1|cut -d'/' -f2|uniq|xargs))
    need="build-tag httpd php mysql"
    [ ${#contents[@]} -ne 4 ] && error_menu "Invalid contents into $rpfile_pack"
    for n in $need; do
        [[ " ${contents[*]} " =~ " $n " ]] && echo "$n found!" || error_menu "$n not found!" 
    done
}

decompress_pack(){
    [ ! -e "$rptarget" -o ! -e "$rpfile_pack" ] && error_menu "invalid target or install-pack"
    echo "Decompressing archive into '$rptarget'"
    execute tar -zxf "$rpfile_pack" -C "$rptarget"
}

read_tag(){
    [ ! -e "$rptarget" ] && error_menu "invalid target"
    echo "Reading tag"
    TAG=$(cat "$rptarget/build-tag")
    [ -z "$TAG" ] && error_menu "Empty tag"
    rm "$rptarget/build-tag"
}

configure_user_path(){
    echo "Configuring user path"
    if ! grep -s 'LLXAMP_PATH' $HOME/.bashrc; then
        echo 'LLXAMP_PATH="$HOME/llxamp"' >> $HOME/.bashrc
        echo 'export PATH="$LLXAMP_PATH:$PATH"' >> $HOME/.bashrc
    fi
}

# MAIN EXECUTION

script_dir=$( cd -- "$( dirname -- $(realpath -e "${BASH_SOURCE[0]}") )" &> /dev/null && pwd )
program=$(basename "${BASH_SOURCE[0]}")
args=$@
nargs=$#
TEMPLATES_DIR=${TEMPLATES_DIR:=$script_dir/templates}

file_pack="$1"
file_pack=${file_pack:=$INSTALL_PACK_DIR/$PACKNAME}
file_pack=${file_pack:=/tmp/llxamp-install-pack/install-pack.tgz}
rpfile_pack=$(execute realpath "$file_pack")

target="$2"
target=${target:=$TARGET_DIR}
target=${target:=$HOME/llxamp}
rptarget=$(execute realpath "$target")

if [ -e "$rptarget" ]; then
    error_menu "'$rptarget' exists, must be non-existent directory"
fi
if [ ! -e "$rpfile_pack" ]; then
    llxamp-download-install-pack || error_menu "Invalid pack file"
fi


test_install_pack
create_target_dir
decompress_pack
read_tag
make_change_text 
make_change_bin
write_httpd_conf
include_php_samples
configure_mysql
write_start_scripts
configure_mysql2
configure_user_path